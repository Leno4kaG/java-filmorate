DROP TABLE IF EXISTS PUBLIC.LIKES CASCADE;
DROP TABLE IF EXISTS PUBLIC.FRIENDS CASCADE;
DROP TABLE IF EXISTS PUBLIC.GENRES CASCADE;
DROP TABLE IF EXISTS PUBLIC.GENRE CASCADE;
DROP TABLE IF EXISTS PUBLIC."USER" CASCADE;
DROP TABLE IF EXISTS PUBLIC.FILM CASCADE;
DROP TABLE IF EXISTS PUBLIC.RATING CASCADE;

CREATE TABLE IF NOT EXISTS PUBLIC.GENRE (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR_IGNORECASE,
	CONSTRAINT GENRE_PK PRIMARY KEY (ID)
);


CREATE TABLE IF NOT EXISTS PUBLIC.RATING (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR_IGNORECASE,
	CONSTRAINT RATING_PK PRIMARY KEY (ID)
);

-- TRUNCATE TABLE PUBLIC.RATING;
MERGE INTO PUBLIC.RATING KEY (id) VALUES (1, 'G');
MERGE INTO PUBLIC.RATING KEY (id) VALUES (2, 'PG');
MERGE INTO PUBLIC.RATING KEY (id) VALUES (3, 'PG-13');
MERGE INTO PUBLIC.RATING KEY (id) VALUES (4, 'R');
MERGE INTO PUBLIC.RATING KEY (id) VALUES (5, 'NC-17');

-- TRUNCATE TABLE PUBLIC.GENRE;
MERGE INTO PUBLIC.GENRE KEY (id) VALUES (1, 'Комедия');
MERGE INTO PUBLIC.GENRE KEY (id) VALUES (2, 'Драма');
MERGE INTO PUBLIC.GENRE KEY (id) VALUES (3, 'Мультфильм');
MERGE INTO PUBLIC.GENRE KEY (id) VALUES (4, 'Триллер');
MERGE INTO PUBLIC.GENRE KEY (id) VALUES (5, 'Документальный');
MERGE INTO PUBLIC.GENRE KEY (id) VALUES (6, 'Боевик');


CREATE TABLE IF NOT EXISTS PUBLIC.FILM (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	RELEASE_DATE DATE,
	DURATION BIGINT,
	mpa INTEGER,
	NAME VARCHAR_IGNORECASE(70),
	DESCRIPTION VARCHAR_IGNORECASE(225),
	CONSTRAINT FILM_PK PRIMARY KEY (ID),
	CONSTRAINT FILM_FK FOREIGN KEY (MPA) REFERENCES PUBLIC.RATING(ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);


CREATE TABLE IF NOT EXISTS PUBLIC."USER" (
	BIRTHDAY DATE,
	EMAIL VARCHAR_IGNORECASE(30) NOT NULL,
	LOGIN VARCHAR_IGNORECASE(30),
	NAME VARCHAR_IGNORECASE(30),
	ID INTEGER NOT NULL AUTO_INCREMENT,
	CONSTRAINT USER_PK PRIMARY KEY (ID)
);


CREATE TABLE IF NOT EXISTS PUBLIC.LIKES (
	USER_ID INTEGER,
	FILM_ID INTEGER
);


CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDS (
	USER_ID INTEGER,
	FRIEND_ID INTEGER,
	CONFIRMATION_STATUS BOOLEAN
);


CREATE TABLE IF NOT EXISTS PUBLIC.GENRES (
	FILM_ID INTEGER,
	GENRE_ID INTEGER,
	CONSTRAINT GENRES_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
	CONSTRAINT GENRES_FK_1 FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRE(ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);
